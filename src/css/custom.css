/**
 * Any CSS included here will be global. The classic template
 * bundles Infima by default. Infima is a CSS framework designed to
 * work well for content-centric websites.
 */

/* You can override the default Infima variables here. */
:root {
  --ifm-color-primary: hsl(282, 49%, 35%);
  --ifm-color-primary-dark: hsl(282, 49%, 30%);
  --ifm-color-primary-darker: hsl(282, 49%, 20%);
  --ifm-color-primary-darkest: hsl(282, 49%, 10%);
  --ifm-color-primary-light: hsl(282, 49%, 70%);
  --ifm-color-primary-lighter: hsl(282, 49%, 80%);
  --ifm-color-primary-lightest: hsl(282, 49%, 95%);
  --ifm-code-font-size: 95%;
  --docusaurus-highlighted-code-line-bg: rgba(0, 0, 0, 0.1);
}

/* For readability concerns, you should choose a lighter palette in dark mode. */
[data-theme="dark"] {
  --ifm-color-primary: #25c2a0;
  --ifm-color-primary-dark: #21af90;
  --ifm-color-primary-darker: #1fa588;
  --ifm-color-primary-darkest: #1a8870;
  --ifm-color-primary-light: #29d5b0;
  --ifm-color-primary-lighter: #32d8b4;
  --ifm-color-primary-lightest: #4fddbf;
  --docusaurus-highlighted-code-line-bg: rgba(0, 0, 0, 0.3);
}

#loading {
  min-height: 10rem;
  display: grid;
  place-content: center;
  .loadingBtn {
    --bg-color: #000000;
    --text-color: #ffffff;
    background-color: var(--bg-color);
    border-radius: 9999px;
    width: 15rem;
    padding: 0.5rem;
    text-align: center;
    font-weight: 600;
    color: var(--text-color);
    text-transform: capitalize;
    font-size: 1rem;
    overflow: hidden;
    cursor: pointer;
  }

  .loadingBtn.loading {
    overflow: hidden;
    position: relative;
    cursor: wait;
    .loader-container {
      display: flex;
      position: absolute;
      top: 0;
      left: 0;
      width: 100%;
      height: 100%;
      z-index: 10;
      background-color: var(--bg-color);
      gap: 0.5rem;
      justify-content: center;
      align-items: center;
      .dot {
        width: 0.5rem;
        height: 0.5rem;
        border-radius: 9999px;
        background-color: var(--text-color);
        animation: loading 1s infinite ease-in-out;
        animation-delay: calc(var(--num) * 0.1s);
      }
    }
  }
}

@keyframes loading {
  0% {
    transform: scale(1);
  }
  33% {
    transform: scale(1.5);
  }
  66% {
    transform: scale(0.5);
  }
  100% {
    transform: scale(1);
  }
}

#aadil {
  stroke: blue;
  stroke-width: 3;
  stroke-linecap: round;
  stroke-linejoin: round;
  fill: none;
  stroke-dasharray: 1000;
  stroke-dashoffset: 1000;
  animation: draw 5s linear forwards infinite;
  animation-direction: alternate;
}

@keyframes draw {
  to {
    stroke-dashoffset: 0;
  }
}

#svg-drawing-example {
  margin: 0 auto;
  width: 100%;
  max-width: 800px;
  padding: 3rem;
  svg {
    width: 30rem;
    overflow: visible;
    background-color: black;
    position: relative;

    .text {
      font-family: Arial, Helvetica, sans-serif;
      font-size: 3rem;
      font-weight: bold;
      stroke: white;
      letter-spacing: -3px;
      stroke-width: 3;
      animation: draw-svg-stroke 5s linear infinite;
      animation-fill-mode: both;
      animation-direction: alternate;
    }
  }
}

@keyframes draw-svg-stroke {
  from {
    fill: transparent;
    stroke-dashoffset: 25%;
    stroke-dasharray: 0 32%;
  }
  75% {
    stroke-dasharray: 32% 0;
    stroke-dashoffset: -25%;
    fill: transparent;
    stroke-width: 3;
  }
  80%,
  100% {
    fill: white;
    stroke-width: 0;
  }
}

#menu-button-example {
  width: 5rem;
  padding: 0.5rem;
  border: 1px solid red;
  display: grid;
  place-content: center;
  box-sizing: content-box;
  button {
    padding: 0;
    border: none;
  }
  .menu-button {
    box-sizing: content-box;
    display: flex;
    flex-direction: column;
    justify-content: space-between;
    align-items: stretch;
    width: 2rem;
    height: 2rem;
    border: none;
    background: none;
    cursor: pointer;

    span {
      width: 100%;
      box-sizing: content-box;
      display: block;
      height: 2px;
      background-color: #222;
      border-radius: 0.25rem;
      transition: transform 0.3s ease;

      &:nth-child(2) {
        transform-origin: center center;
      }
    }
  }

  .menu-button.menu-button-open {
    span:nth-child(1) {
      transform: translate3d(0, 6px, 0) rotate(45deg);
    }
    span:nth-child(2) {
      transform: scaleX(0);
    }
    span:nth-child(3) {
      transform: translate3d(0, -8px, 0) rotate(-45deg);
    }
  }
}

#sparkle-example {
  .sparkle-svg {
    position: absolute;
    pointer-events: none;
    z-index: 2;
  }

  .sparkle {
    position: relative;
  }
}

@keyframes sparkle-scale {
  0% {
    transform: scale(0);
  }
  50% {
    transform: scale(1);
  }
  100% {
    transform: scale(0);
  }
}

@keyframes sparkle-spin {
  0% {
    transform: rotate(0deg);
  }
  100% {
    transform: rotate(180deg);
  }
}
